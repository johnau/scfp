name: GenerateDocFxDocsOnPush

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "part4" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  publish-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Extract Repo Name
      id: extract_repo_name
      run: echo "repo_name=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT

    - name: Update TOC
      run: |
        sed -i "s|/services/|/${{ steps.extract_repo_name.outputs.repo_name }}/services/|g" docs/toc.yml
        sed -i "s|/general/|/${{ steps.extract_repo_name.outputs.repo_name }}/general/|g" docs/toc.yml
    
    - name: Dotnet Setup
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - run: dotnet tool update -g docfx
    - run: docfx docs/docfx.json

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: 'docs/_site'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
